buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven {
            // 阿里云镜像，方便国内开发
            url = uri("https://maven.aliyun.com/repository/public/")
        }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0.16,6.2)', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }
}

apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

version = mod_version
group = 'com.github.tartaricacid'
archivesBaseName = 'touhoulittlemaid-1.20.1-release'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2023.08.20-1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        configureEach {
            jvmArgs = [
                    "-XX:+IgnoreUnrecognizedVMOptions",
                    "-XX:+AllowEnhancedClassRedefinition"
            ]
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                touhou_little_maid {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run/client_a')
            property 'fml.earlyprogresswindow', 'false'
        }

        client2 {
            parent minecraft.runs.client
            workingDirectory project.file('run/client_b')
            args '--username', 'tartaric_acid'
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.enabledGameTestNamespaces', 'touhou_little_maid'
        }

        data {
            workingDirectory project.file('run/data')
            args '--mod', 'touhou_little_maid', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    exclude '.cache/**'
}

mixin {
    add sourceSets.main, "touhou_little_maid.refmap.json"
    config "touhou_little_maid.mixins.json"
}

configurations {
    // 自定义一个 minecraftLibrary，方便引入需要 Shadow 的库
    mcLib
    minecraftLibrary {
        extendsFrom mcLib
    }
}

repositories {
    // 优先本地 libs 文件夹
    flatDir {
        dir 'libs'
    }
    maven {
        name = "Curse Maven"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
        content {
            includeGroup "mezz.jei"
            includeGroup "vazkii.patchouli"
        }
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
        content {
            includeGroup "mezz.jei"
            includeGroup "vazkii.patchouli"
        }
    }
    maven {
        url "https://maven.latvian.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.latvian.apps"
        }
    }
    maven {
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        url = "https://maven.createmod.net"
        content {
            includeGroup "net.createmod.ponder"
            includeGroup "dev.engine-room.flywheel"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"

    // Opus 音频解码库
    mcLib "org.gagravarr:vorbis-java-core:0.8"
    mcLib "io.github.jaredmdobson:concentus:1.0.2"

    // YAML 库
    mcLib "org.yaml:snakeyaml:2.4"

    // 单元测试
    testImplementation 'junit:junit:4.13.2'

    // KubeJS
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:2001.6.5-build.16")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:2001.2.3-build.10")
    runtimeOnly fg.deobf("dev.architectury:architectury-forge:9.2.14")
    runtimeOnly fg.deobf("maven.modrinth:probejs:6.0.0")

    // compile against the JEI API but do not include it at runtime
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-common-api:15.20.0.105"))
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.20.0.105"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-1.20.1-forge:15.20.0.105"))

    // rei
    compileOnly fg.deobf("curse.maven:architectury-api-419699:5137938")
    compileOnly fg.deobf("libs:RoughlyEnoughItems-forge:12.1.725")

    // emi
    // Forge (see below block as well if you use Forge Gradle)
    compileOnly fg.deobf("libs:emi-forge:1.1.6+1.20.1:api")
    compileOnly fg.deobf("libs:emi-forge:1.1.6+1.20.1")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.20.1-80-FORGE")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.20.1-80-FORGE")

    implementation fg.deobf("curse.maven:jade-324717:5072729")
    implementation fg.deobf("curse.maven:the-one-probe-245211:4629624")

    implementation fg.deobf("libs:cloth-config-forge:11.1.106")

    runtimeOnly fg.deobf("maven.modrinth:citadel:2.4.9-forge")
    implementation fg.deobf("curse.maven:domestication-innovation-591149:4911955")

    implementation fg.deobf("maven.modrinth:slashblade-resharped:1.1.6-1.20.1")

    implementation fg.deobf("curse.maven:iron-chests-228756:4614852")

    compileOnly fg.deobf("maven.modrinth:immersive-melodies:0.3.0+1.20.1-forge")

    runtimeOnly "curse.maven:kotlin-for-forge-351264:4983659"
    runtimeOnly fg.deobf("curse.maven:libipn-679177:4870127")
    implementation fg.deobf("curse.maven:inventory-profiles-next-495267:4813458")

    implementation fg.deobf("curse.maven:timeless-and-classics-zero-1028108:6518539-sources-6518544")

    implementation fg.deobf("maven.modrinth:simple-hats:1.20.1-0.3.2-forge")
    implementation fg.deobf("maven.modrinth:curios:5.9.1+1.20.1-forge")

    compileOnly fg.deobf("maven.modrinth:torohealth-damage-indicators-updated:1.20.1-forge-1")

    implementation fg.deobf("curse.maven:aquaculture-60028:5585290")

    runtimeOnly fg.deobf("maven.modrinth:embeddium:0.3.31+mc1.20.1")
    compileOnly fg.deobf("maven.modrinth:embeddium:0.3.31+mc1.20.1")

    implementation fg.deobf("maven.modrinth:inventory-tweaks-refoxed:1.20.1-1.2.0")

    implementation fg.deobf("net.createmod.ponder:Ponder-Forge-1.20.1:1.0.80")
    runtimeOnly fg.deobf("maven.modrinth:create:1.20.1-6.0.6")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    // runtimeOnly fg.deobf("curse.maven:carry-on-274259:4882500")
    // runtimeOnly fg.deobf("curse.maven:bookshelf-228525:5084135")
    // runtimeOnly fg.deobf("curse.maven:enchantment-descriptions-250419:5136988")
    // runtimeOnly fg.deobf("maven.modrinth:lootr:0.7.35.90-forge")
    // runtimeOnly fg.deobf("maven.modrinth:industrial-foregoing:1.20.1-3.5.19")
    // runtimeOnly fg.deobf("maven.modrinth:titanium:1.20.1-3.8.32")
    // runtimeOnly fg.deobf("maven.modrinth:geckolib:4.4.5-forge,1.20.1")
    // runtimeOnly fg.deobf("maven.modrinth:caelus:3.2.0+1.20.1")
    // runtimeOnly fg.deobf("maven.modrinth:playeranimator:1.0.2-rc1+1.20-forge")
    // runtimeOnly fg.deobf("maven.modrinth:irons-spells-n-spellbooks:1.20.1-3.4.0.7")
    // runtimeOnly fg.deobf("maven.modrinth:farmers-delight:1.20.1-1.2.6-forge")
    // runtimeOnly fg.deobf("maven.modrinth:better-advancements:0.4.2.10-forge")
    // runtimeOnly fg.deobf("maven.modrinth:ice-and-fire-dragons:2.1.13-1.20.1-beta-5")
    // runtimeOnly fg.deobf('maven.modrinth:oculus:1.20.1-1.7.0')
    // runtimeOnly fg.deobf('curse.maven:hostile-neural-networks-552574:5895036')
    // runtimeOnly fg.deobf('curse.maven:placebo-283644:6274231')
    // runtimeOnly fg.deobf("curse.maven:maid-storage-manager-1210244:6315697")
    // runtimeOnly fg.deobf("curse.maven:lavafishing-1035887:5432767")
    // runtimeOnly fg.deobf("curse.maven:catalogue-459701:4766090")
}

shadowJar {
    configurations = [project.configurations.mcLib]

    // MP3 音频库 居然会把 junit 打包进去……
    dependencies {
        exclude(dependency('junit:junit'))
    }

    // 包重定向
    relocate 'io.github.jaredmdobson.concentus', 'com.github.tartaricacid.touhoulittlemaid.libs.concentus'
    relocate 'org.gagravarr', 'com.github.tartaricacid.touhoulittlemaid.libs.gagravarr'
    relocate 'org.yaml.snakeyaml', 'com.github.tartaricacid.touhoulittlemaid.libs.snakeyaml'

    // 排除不需要的依赖项和资源
    exclude 'META-INF/maven/**/*'
    exclude 'META-INF/versions/**/*'
    // 这个版权许可都已经手动添加进 licenses 里了
    exclude 'META-INF/LICENSE'

    mergeServiceFiles()
    minimize()
}

reobf {
    shadowJar {}
}

tasks.compileJava {
    // dsx137: 强制重新编译和生成 refmap.json 文件，避免偶发情况下该文件丢失问题
    outputs.upToDateWhen { false }
}

jar {
    manifest {
        attributes([
                "Implementation-Title"  : project.name,
                "Implementation-Version": "${version}"
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

java {
    // 编译源码文件，方便发布 maven
    withSourcesJar()
}

// 让 idea 主动下载前置库的源码和 Javadoc
// 新版本 idea 默认不会下载这两个，这虽然加快了构建速度，但是不方便调试
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
